# -*- coding: utf-8 -*-
from global_vars import *
###########################################################################
#
# NAME:
#    $ECF_BASE/aice/get_output.ecf
#
# FUNCTION:
#    archive model data (s-depth) for current termin, i.e. if the model runs 4
#    times a day, then the archived file will contian the first 6 hourd of the
#    forecast. This way we get a continuous time series in the archive.
#
# RESPONSIBLE:
#    Cyril Palerme  <cyrilp@met.no> SUV
#
##########################################################################
#
import os
import sys
import glob
import metecflow
import python
import netCDF4
import datetime
import numpy as np

python.module('use', '/modules/MET/rhel8/user-modules/')
python.module('load', 'fou-modules/fou-hi/toolbox/dev')
python.module('list')

# import roms specific tools:
import hi_util

try:
    with metecflow.Client(GLOBAL_VARS) as ci:
        conda_run = 'conda-run-rhel8-prod-10-2022'

        # get date and time string from label in start_run.ecf task
        taskname = GLOBAL_VARS["ecf_name"]
        parent = taskname.strip(taskname.split('/')[-1])
        dtg = ci.get_label_value("dtg", os.path.join(parent,"start_run"))
        dtg00 = dtg[0:8]+'T000000Z'
        storeAB = hi_util.get_storeAB(ci=ci)
        

        # archive
        AICE_forecasts_file = os.path.join(ci.datadir, "forecasts/AICE_forecasts_{}.nc".format(dtg00))
        archive_dir = os.path.join(storeAB, "project/fou/hi/oper/aice/archive/")
        hi_util.copy_to_archive_on_ppi(copyfile=AICE_forecasts_file, targetdir=archive_dir)
        ci.child_event('archived')

except:
    print("Client failed: {}".format(e))

sys.exit(0)
